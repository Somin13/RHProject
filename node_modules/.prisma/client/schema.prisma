model Computeur {
  id      Int    @id @default(autoincrement())
  namePc  String
  nameMac String

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  employe Employe?
}

model Employe {
  id            Int       @id @default(autoincrement())
  name          String
  lastName      String
  email         String    @unique
  password      String
  dateNaissance DateTime?
  genre         Sexe?

  role Role @default(EMPLOYE)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  computeurId Int?       @unique
  computeur   Computeur? @relation(fields: [computeurId], references: [id])

  photo String?
}

enum Sexe {
  MASCULIN
  FEMININ
}

// model Message {
//     id          Int      @id @default(autoincrement())
//     content     String
//     senderId    Int
//     receiverId  Int
//     timestamp   DateTime @default(now())

//     sender      User     @relation("SentMessages", fields: [senderId], references: [id])
//     receiver    Employe  @relation("ReceivedMessages", fields: [receiverId], references: [id])
// }

model User {
  id            Int     @id @default(autoincrement())
  raisonSocial  String
  siret         String  @unique
  password      String
  name          String?
  lastName      String?
  profilPicture String?

  // messages Message[]
  employe   Employe[]
  computeur Computeur[]
  role      Role        @default(USER)
}

enum Role {
  USER
  EMPLOYE
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
